package August.day12;

/**
 * @题目 ：178. Rank Scores
 * @Data: 19/8/20
 * @题目描述：
 * SQL架构
Write a SQL query to rank scores. If there is a tie between two scores, both should have the same ranking. Note that after a tie, the next ranking number should be the next consecutive integer value. In other words, there should be no "holes" between ranks.

+----+-------+
| Id | Score |
+----+-------+
| 1  | 3.50  |
| 2  | 3.65  |
| 3  | 4.00  |
| 4  | 3.85  |
| 5  | 4.00  |
| 6  | 3.65  |
+----+-------+
For example, given the above Scores table, your query should generate the following report (order by highest score):

+-------+------+
| Score | Rank |
+-------+------+
| 4.00  | 1    |
| 4.00  | 1    |
| 3.85  | 2    |
| 3.65  | 3    |
| 3.65  | 3    |
| 3.50  | 4    |
+-------+------+
 * @题目地址： 链接：https://leetcode-cn.com/problems/rank-scores/
 * @示例1: ######
 * @示例2: ###
 * @示例3: ###
 **/

 select
    a.Score as score ,
    (select count(distinct b.Score) from Scores b where b.Score >=a.Score) as rank
from Scores a order by Score DESC;

-- 作者：zazalumonster
-- 链接：https://leetcode-cn.com/problems/rank-scores/solution/mysqlbi-jiao-hao-li-jie-de-yi-chong-xie-fa-by-zaza/
-- 来源：力扣（LeetCode）
-- 著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。